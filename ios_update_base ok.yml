## Backup Running Config 

- hosts: cisco_switches 
  vars: 
    upgrade_ios_version: 12.2(55)SE12
    dest_path: ~/network-programmability/backups/
    network_nfs: 10.10.10.10
    firmware_file_name: c2960-lanbasek9-mz.122-55.SE12.bin 
  tasks:
   - name: Backup Running Config
     cisco.ios.ios_command:
       commands: show run
     register: config_backup
 
   - name: Save Running Config Backup output to dest_path
     ansible.builtin.copy:
       content: "{{ _content_ }}"
       dest: "{{ dest_path }}"
   
 
## SAVE the Running Config 

   - name: Save running config
     cisco.ios.ios_config:
       save_when: always
   

   - name: FTP copy software {{ firmware_file_name }} from {{ network_nfs }}
     cisco.ios.ios_command:
       commands:
         - command: copy ftp://{{ network_nfs }}/{{ firmware_file_name }} flash:{{ firmware_file_name
             }}
           prompt: Destination filename \[{{ firmware_file_name }}\]
           answer: "\r"
     vars:
       ansible_command_timeout: 300
     register: ftp_copy
     when:
       - network_package == "ios"
   

   - name: Change Boot Variable to new image {{ firmware_file_name }} and always save
     cisco.ios.ios_config:
       commands:
         - command: boot system flash:{{ firmware_file_name }}
           prompt: Enter command to save
           answer: "\r"
     when:
       - network_package == "ios"
       - ftp_copy.changed
   

   - name: Reload the Device and if prompted for confirmation answer yes
     ansible.netcommon.cli_command:
       command: reload
       prompt:
         - confirm
       answer:
         - y
   
   - name: Wait for device to come back online and delegate to localhost
     ansible.builtin.wait_for:
       host: "{{ inventory_hostname }}"
       port: 22
       delay: 20
       timeout: 180
     delegate_to: localhost
   
   - name: Collect running version 
     cisco.ios.ios_command:
       commands: show version
     register: show_version
   







       
 
